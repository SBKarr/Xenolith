/**
 Copyright (c) 2022 Roman Katuntsev <sbkarr@stappler.org>

 Permission is hereby granted, free of charge, to any person obtaining a copy
 of this software and associated documentation files (the "Software"), to deal
 in the Software without restriction, including without limitation the rights
 to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 copies of the Software, and to permit persons to whom the Software is
 furnished to do so, subject to the following conditions:

 The above copyright notice and this permission notice shall be included in
 all copies or substantial portions of the Software.

 THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 THE SOFTWARE.
 **/

// Autogenerated with 'headergen' script

#ifndef COMPONENTS_XENOLITH_VK_XLVKTABLE_H_
#define COMPONENTS_XENOLITH_VK_XLVKTABLE_H_

namespace stappler::xenolith::vk {

struct LoaderTable {
	LoaderTable(PFN_vkGetInstanceProcAddr addr);

#if defined(VK_VERSION_1_0)
	const PFN_vkGetInstanceProcAddr vkGetInstanceProcAddr = nullptr;
	const PFN_vkCreateInstance vkCreateInstance = nullptr;
	const PFN_vkEnumerateInstanceExtensionProperties vkEnumerateInstanceExtensionProperties = nullptr;
	const PFN_vkEnumerateInstanceLayerProperties vkEnumerateInstanceLayerProperties = nullptr;
#endif /* defined(VK_VERSION_1_0) */
#if defined(VK_VERSION_1_1)
	const PFN_vkEnumerateInstanceVersion vkEnumerateInstanceVersion = nullptr;
#endif /* defined(VK_VERSION_1_1) */
};

struct InstanceTable {
#if VK_HOOK_DEBUG
	static InstanceTable makeHooks();
#endif /* VK_HOOK_DEBUG */

	InstanceTable(PFN_vkGetInstanceProcAddr addr, VkInstance instance);

#if defined(VK_VERSION_1_0)
	const PFN_vkGetInstanceProcAddr vkGetInstanceProcAddr = nullptr;
	const PFN_vkDestroyInstance vkDestroyInstance = nullptr;
	const PFN_vkEnumeratePhysicalDevices vkEnumeratePhysicalDevices = nullptr;
	const PFN_vkGetPhysicalDeviceFeatures vkGetPhysicalDeviceFeatures = nullptr;
	const PFN_vkGetPhysicalDeviceFormatProperties vkGetPhysicalDeviceFormatProperties = nullptr;
	const PFN_vkGetPhysicalDeviceImageFormatProperties vkGetPhysicalDeviceImageFormatProperties = nullptr;
	const PFN_vkGetPhysicalDeviceProperties vkGetPhysicalDeviceProperties = nullptr;
	const PFN_vkGetPhysicalDeviceQueueFamilyProperties vkGetPhysicalDeviceQueueFamilyProperties = nullptr;
	const PFN_vkGetPhysicalDeviceMemoryProperties vkGetPhysicalDeviceMemoryProperties = nullptr;
	const PFN_vkGetDeviceProcAddr vkGetDeviceProcAddr = nullptr;
	const PFN_vkCreateDevice vkCreateDevice = nullptr;
	const PFN_vkEnumerateDeviceExtensionProperties vkEnumerateDeviceExtensionProperties = nullptr;
	const PFN_vkEnumerateDeviceLayerProperties vkEnumerateDeviceLayerProperties = nullptr;
	const PFN_vkGetPhysicalDeviceSparseImageFormatProperties vkGetPhysicalDeviceSparseImageFormatProperties = nullptr;
#endif /* defined(VK_VERSION_1_0) */
#if defined(VK_VERSION_1_1)
	const PFN_vkEnumeratePhysicalDeviceGroups vkEnumeratePhysicalDeviceGroups = nullptr;
	const PFN_vkGetPhysicalDeviceFeatures2 vkGetPhysicalDeviceFeatures2 = nullptr;
	const PFN_vkGetPhysicalDeviceProperties2 vkGetPhysicalDeviceProperties2 = nullptr;
	const PFN_vkGetPhysicalDeviceFormatProperties2 vkGetPhysicalDeviceFormatProperties2 = nullptr;
	const PFN_vkGetPhysicalDeviceImageFormatProperties2 vkGetPhysicalDeviceImageFormatProperties2 = nullptr;
	const PFN_vkGetPhysicalDeviceQueueFamilyProperties2 vkGetPhysicalDeviceQueueFamilyProperties2 = nullptr;
	const PFN_vkGetPhysicalDeviceMemoryProperties2 vkGetPhysicalDeviceMemoryProperties2 = nullptr;
	const PFN_vkGetPhysicalDeviceSparseImageFormatProperties2 vkGetPhysicalDeviceSparseImageFormatProperties2 = nullptr;
	const PFN_vkGetPhysicalDeviceExternalBufferProperties vkGetPhysicalDeviceExternalBufferProperties = nullptr;
	const PFN_vkGetPhysicalDeviceExternalFenceProperties vkGetPhysicalDeviceExternalFenceProperties = nullptr;
	const PFN_vkGetPhysicalDeviceExternalSemaphoreProperties vkGetPhysicalDeviceExternalSemaphoreProperties = nullptr;
#endif /* defined(VK_VERSION_1_1) */
#if defined(VK_VERSION_1_3)
	const PFN_vkGetPhysicalDeviceToolProperties vkGetPhysicalDeviceToolProperties = nullptr;
#endif /* defined(VK_VERSION_1_3) */
#if defined(VK_KHR_surface)
	const PFN_vkDestroySurfaceKHR vkDestroySurfaceKHR = nullptr;
	const PFN_vkGetPhysicalDeviceSurfaceSupportKHR vkGetPhysicalDeviceSurfaceSupportKHR = nullptr;
	const PFN_vkGetPhysicalDeviceSurfaceCapabilitiesKHR vkGetPhysicalDeviceSurfaceCapabilitiesKHR = nullptr;
	const PFN_vkGetPhysicalDeviceSurfaceFormatsKHR vkGetPhysicalDeviceSurfaceFormatsKHR = nullptr;
	const PFN_vkGetPhysicalDeviceSurfacePresentModesKHR vkGetPhysicalDeviceSurfacePresentModesKHR = nullptr;
#endif /* defined(VK_KHR_surface) */
#if (defined(VK_KHR_swapchain) && defined(VK_VERSION_1_1)) || (defined(VK_KHR_device_group) && defined(VK_KHR_surface))
	const PFN_vkGetPhysicalDevicePresentRectanglesKHR vkGetPhysicalDevicePresentRectanglesKHR = nullptr;
#endif /* (defined(VK_KHR_swapchain) && defined(VK_VERSION_1_1)) || (defined(VK_KHR_device_group) && defined(VK_KHR_surface)) */
#if defined(VK_KHR_display)
	const PFN_vkGetPhysicalDeviceDisplayPropertiesKHR vkGetPhysicalDeviceDisplayPropertiesKHR = nullptr;
	const PFN_vkGetPhysicalDeviceDisplayPlanePropertiesKHR vkGetPhysicalDeviceDisplayPlanePropertiesKHR = nullptr;
	const PFN_vkGetDisplayPlaneSupportedDisplaysKHR vkGetDisplayPlaneSupportedDisplaysKHR = nullptr;
	const PFN_vkGetDisplayModePropertiesKHR vkGetDisplayModePropertiesKHR = nullptr;
	const PFN_vkCreateDisplayModeKHR vkCreateDisplayModeKHR = nullptr;
	const PFN_vkGetDisplayPlaneCapabilitiesKHR vkGetDisplayPlaneCapabilitiesKHR = nullptr;
	const PFN_vkCreateDisplayPlaneSurfaceKHR vkCreateDisplayPlaneSurfaceKHR = nullptr;
#endif /* defined(VK_KHR_display) */
#if defined(VK_KHR_xlib_surface)
	const PFN_vkCreateXlibSurfaceKHR vkCreateXlibSurfaceKHR = nullptr;
	const PFN_vkGetPhysicalDeviceXlibPresentationSupportKHR vkGetPhysicalDeviceXlibPresentationSupportKHR = nullptr;
#endif /* defined(VK_KHR_xlib_surface) */
#if defined(VK_KHR_xcb_surface)
	const PFN_vkCreateXcbSurfaceKHR vkCreateXcbSurfaceKHR = nullptr;
	const PFN_vkGetPhysicalDeviceXcbPresentationSupportKHR vkGetPhysicalDeviceXcbPresentationSupportKHR = nullptr;
#endif /* defined(VK_KHR_xcb_surface) */
#if defined(VK_KHR_wayland_surface)
	const PFN_vkCreateWaylandSurfaceKHR vkCreateWaylandSurfaceKHR = nullptr;
	const PFN_vkGetPhysicalDeviceWaylandPresentationSupportKHR vkGetPhysicalDeviceWaylandPresentationSupportKHR = nullptr;
#endif /* defined(VK_KHR_wayland_surface) */
#if defined(VK_KHR_android_surface)
	const PFN_vkCreateAndroidSurfaceKHR vkCreateAndroidSurfaceKHR = nullptr;
#endif /* defined(VK_KHR_android_surface) */
#if defined(VK_KHR_win32_surface)
	const PFN_vkCreateWin32SurfaceKHR vkCreateWin32SurfaceKHR = nullptr;
	const PFN_vkGetPhysicalDeviceWin32PresentationSupportKHR vkGetPhysicalDeviceWin32PresentationSupportKHR = nullptr;
#endif /* defined(VK_KHR_win32_surface) */
#if defined(VK_EXT_debug_report)
	const PFN_vkCreateDebugReportCallbackEXT vkCreateDebugReportCallbackEXT = nullptr;
	const PFN_vkDestroyDebugReportCallbackEXT vkDestroyDebugReportCallbackEXT = nullptr;
	const PFN_vkDebugReportMessageEXT vkDebugReportMessageEXT = nullptr;
#endif /* defined(VK_EXT_debug_report) */
#if defined(VK_KHR_video_queue)
	const PFN_vkGetPhysicalDeviceVideoCapabilitiesKHR vkGetPhysicalDeviceVideoCapabilitiesKHR = nullptr;
	const PFN_vkGetPhysicalDeviceVideoFormatPropertiesKHR vkGetPhysicalDeviceVideoFormatPropertiesKHR = nullptr;
#endif /* defined(VK_KHR_video_queue) */
#if defined(VK_GGP_stream_descriptor_surface)
	const PFN_vkCreateStreamDescriptorSurfaceGGP vkCreateStreamDescriptorSurfaceGGP = nullptr;
#endif /* defined(VK_GGP_stream_descriptor_surface) */
#if defined(VK_NV_external_memory_capabilities)
	const PFN_vkGetPhysicalDeviceExternalImageFormatPropertiesNV vkGetPhysicalDeviceExternalImageFormatPropertiesNV = nullptr;
#endif /* defined(VK_NV_external_memory_capabilities) */
#if defined(VK_KHR_get_physical_device_properties2)
	const PFN_vkGetPhysicalDeviceFeatures2KHR vkGetPhysicalDeviceFeatures2KHR = nullptr;
	const PFN_vkGetPhysicalDeviceProperties2KHR vkGetPhysicalDeviceProperties2KHR = nullptr;
	const PFN_vkGetPhysicalDeviceFormatProperties2KHR vkGetPhysicalDeviceFormatProperties2KHR = nullptr;
	const PFN_vkGetPhysicalDeviceImageFormatProperties2KHR vkGetPhysicalDeviceImageFormatProperties2KHR = nullptr;
	const PFN_vkGetPhysicalDeviceQueueFamilyProperties2KHR vkGetPhysicalDeviceQueueFamilyProperties2KHR = nullptr;
	const PFN_vkGetPhysicalDeviceMemoryProperties2KHR vkGetPhysicalDeviceMemoryProperties2KHR = nullptr;
	const PFN_vkGetPhysicalDeviceSparseImageFormatProperties2KHR vkGetPhysicalDeviceSparseImageFormatProperties2KHR = nullptr;
#endif /* defined(VK_KHR_get_physical_device_properties2) */
#if defined(VK_NN_vi_surface)
	const PFN_vkCreateViSurfaceNN vkCreateViSurfaceNN = nullptr;
#endif /* defined(VK_NN_vi_surface) */
#if defined(VK_KHR_device_group_creation)
	const PFN_vkEnumeratePhysicalDeviceGroupsKHR vkEnumeratePhysicalDeviceGroupsKHR = nullptr;
#endif /* defined(VK_KHR_device_group_creation) */
#if defined(VK_KHR_external_memory_capabilities)
	const PFN_vkGetPhysicalDeviceExternalBufferPropertiesKHR vkGetPhysicalDeviceExternalBufferPropertiesKHR = nullptr;
#endif /* defined(VK_KHR_external_memory_capabilities) */
#if defined(VK_KHR_external_semaphore_capabilities)
	const PFN_vkGetPhysicalDeviceExternalSemaphorePropertiesKHR vkGetPhysicalDeviceExternalSemaphorePropertiesKHR = nullptr;
#endif /* defined(VK_KHR_external_semaphore_capabilities) */
#if defined(VK_EXT_direct_mode_display)
	const PFN_vkReleaseDisplayEXT vkReleaseDisplayEXT = nullptr;
#endif /* defined(VK_EXT_direct_mode_display) */
#if defined(VK_EXT_acquire_xlib_display)
	const PFN_vkAcquireXlibDisplayEXT vkAcquireXlibDisplayEXT = nullptr;
	const PFN_vkGetRandROutputDisplayEXT vkGetRandROutputDisplayEXT = nullptr;
#endif /* defined(VK_EXT_acquire_xlib_display) */
#if defined(VK_EXT_display_surface_counter)
	const PFN_vkGetPhysicalDeviceSurfaceCapabilities2EXT vkGetPhysicalDeviceSurfaceCapabilities2EXT = nullptr;
#endif /* defined(VK_EXT_display_surface_counter) */
#if defined(VK_KHR_external_fence_capabilities)
	const PFN_vkGetPhysicalDeviceExternalFencePropertiesKHR vkGetPhysicalDeviceExternalFencePropertiesKHR = nullptr;
#endif /* defined(VK_KHR_external_fence_capabilities) */
#if defined(VK_KHR_performance_query)
	const PFN_vkEnumeratePhysicalDeviceQueueFamilyPerformanceQueryCountersKHR vkEnumeratePhysicalDeviceQueueFamilyPerformanceQueryCountersKHR = nullptr;
	const PFN_vkGetPhysicalDeviceQueueFamilyPerformanceQueryPassesKHR vkGetPhysicalDeviceQueueFamilyPerformanceQueryPassesKHR = nullptr;
#endif /* defined(VK_KHR_performance_query) */
#if defined(VK_KHR_get_surface_capabilities2)
	const PFN_vkGetPhysicalDeviceSurfaceCapabilities2KHR vkGetPhysicalDeviceSurfaceCapabilities2KHR = nullptr;
	const PFN_vkGetPhysicalDeviceSurfaceFormats2KHR vkGetPhysicalDeviceSurfaceFormats2KHR = nullptr;
#endif /* defined(VK_KHR_get_surface_capabilities2) */
#if defined(VK_KHR_get_display_properties2)
	const PFN_vkGetPhysicalDeviceDisplayProperties2KHR vkGetPhysicalDeviceDisplayProperties2KHR = nullptr;
	const PFN_vkGetPhysicalDeviceDisplayPlaneProperties2KHR vkGetPhysicalDeviceDisplayPlaneProperties2KHR = nullptr;
	const PFN_vkGetDisplayModeProperties2KHR vkGetDisplayModeProperties2KHR = nullptr;
	const PFN_vkGetDisplayPlaneCapabilities2KHR vkGetDisplayPlaneCapabilities2KHR = nullptr;
#endif /* defined(VK_KHR_get_display_properties2) */
#if defined(VK_MVK_ios_surface)
	const PFN_vkCreateIOSSurfaceMVK vkCreateIOSSurfaceMVK = nullptr;
#endif /* defined(VK_MVK_ios_surface) */
#if defined(VK_MVK_macos_surface)
	const PFN_vkCreateMacOSSurfaceMVK vkCreateMacOSSurfaceMVK = nullptr;
#endif /* defined(VK_MVK_macos_surface) */
#if defined(VK_EXT_debug_utils)
	const PFN_vkSetDebugUtilsObjectNameEXT vkSetDebugUtilsObjectNameEXT = nullptr;
	const PFN_vkSetDebugUtilsObjectTagEXT vkSetDebugUtilsObjectTagEXT = nullptr;
	const PFN_vkQueueBeginDebugUtilsLabelEXT vkQueueBeginDebugUtilsLabelEXT = nullptr;
	const PFN_vkQueueEndDebugUtilsLabelEXT vkQueueEndDebugUtilsLabelEXT = nullptr;
	const PFN_vkQueueInsertDebugUtilsLabelEXT vkQueueInsertDebugUtilsLabelEXT = nullptr;
	const PFN_vkCmdBeginDebugUtilsLabelEXT vkCmdBeginDebugUtilsLabelEXT = nullptr;
	const PFN_vkCmdEndDebugUtilsLabelEXT vkCmdEndDebugUtilsLabelEXT = nullptr;
	const PFN_vkCmdInsertDebugUtilsLabelEXT vkCmdInsertDebugUtilsLabelEXT = nullptr;
	const PFN_vkCreateDebugUtilsMessengerEXT vkCreateDebugUtilsMessengerEXT = nullptr;
	const PFN_vkDestroyDebugUtilsMessengerEXT vkDestroyDebugUtilsMessengerEXT = nullptr;
	const PFN_vkSubmitDebugUtilsMessageEXT vkSubmitDebugUtilsMessageEXT = nullptr;
#endif /* defined(VK_EXT_debug_utils) */
#if defined(VK_EXT_sample_locations)
	const PFN_vkGetPhysicalDeviceMultisamplePropertiesEXT vkGetPhysicalDeviceMultisamplePropertiesEXT = nullptr;
#endif /* defined(VK_EXT_sample_locations) */
#if defined(VK_EXT_calibrated_timestamps)
	const PFN_vkGetPhysicalDeviceCalibrateableTimeDomainsEXT vkGetPhysicalDeviceCalibrateableTimeDomainsEXT = nullptr;
#endif /* defined(VK_EXT_calibrated_timestamps) */
#if defined(VK_FUCHSIA_imagepipe_surface)
	const PFN_vkCreateImagePipeSurfaceFUCHSIA vkCreateImagePipeSurfaceFUCHSIA = nullptr;
#endif /* defined(VK_FUCHSIA_imagepipe_surface) */
#if defined(VK_EXT_metal_surface)
	const PFN_vkCreateMetalSurfaceEXT vkCreateMetalSurfaceEXT = nullptr;
#endif /* defined(VK_EXT_metal_surface) */
#if defined(VK_KHR_fragment_shading_rate)
	const PFN_vkGetPhysicalDeviceFragmentShadingRatesKHR vkGetPhysicalDeviceFragmentShadingRatesKHR = nullptr;
#endif /* defined(VK_KHR_fragment_shading_rate) */
#if defined(VK_EXT_tooling_info)
	const PFN_vkGetPhysicalDeviceToolPropertiesEXT vkGetPhysicalDeviceToolPropertiesEXT = nullptr;
#endif /* defined(VK_EXT_tooling_info) */
#if defined(VK_NV_cooperative_matrix)
	const PFN_vkGetPhysicalDeviceCooperativeMatrixPropertiesNV vkGetPhysicalDeviceCooperativeMatrixPropertiesNV = nullptr;
#endif /* defined(VK_NV_cooperative_matrix) */
#if defined(VK_NV_coverage_reduction_mode)
	const PFN_vkGetPhysicalDeviceSupportedFramebufferMixedSamplesCombinationsNV vkGetPhysicalDeviceSupportedFramebufferMixedSamplesCombinationsNV = nullptr;
#endif /* defined(VK_NV_coverage_reduction_mode) */
#if defined(VK_EXT_full_screen_exclusive)
	const PFN_vkGetPhysicalDeviceSurfacePresentModes2EXT vkGetPhysicalDeviceSurfacePresentModes2EXT = nullptr;
#endif /* defined(VK_EXT_full_screen_exclusive) */
#if defined(VK_EXT_headless_surface)
	const PFN_vkCreateHeadlessSurfaceEXT vkCreateHeadlessSurfaceEXT = nullptr;
#endif /* defined(VK_EXT_headless_surface) */
#if defined(VK_EXT_acquire_drm_display)
	const PFN_vkAcquireDrmDisplayEXT vkAcquireDrmDisplayEXT = nullptr;
	const PFN_vkGetDrmDisplayEXT vkGetDrmDisplayEXT = nullptr;
#endif /* defined(VK_EXT_acquire_drm_display) */
#if defined(VK_NV_acquire_winrt_display)
	const PFN_vkAcquireWinrtDisplayNV vkAcquireWinrtDisplayNV = nullptr;
	const PFN_vkGetWinrtDisplayNV vkGetWinrtDisplayNV = nullptr;
#endif /* defined(VK_NV_acquire_winrt_display) */
#if defined(VK_EXT_directfb_surface)
	const PFN_vkCreateDirectFBSurfaceEXT vkCreateDirectFBSurfaceEXT = nullptr;
	const PFN_vkGetPhysicalDeviceDirectFBPresentationSupportEXT vkGetPhysicalDeviceDirectFBPresentationSupportEXT = nullptr;
#endif /* defined(VK_EXT_directfb_surface) */
#if defined(VK_QNX_screen_surface)
	const PFN_vkCreateScreenSurfaceQNX vkCreateScreenSurfaceQNX = nullptr;
	const PFN_vkGetPhysicalDeviceScreenPresentationSupportQNX vkGetPhysicalDeviceScreenPresentationSupportQNX = nullptr;
#endif /* defined(VK_QNX_screen_surface) */
};

struct DeviceTable {
#if VK_HOOK_DEBUG
	static DeviceTable makeHooks();
#endif /* VK_HOOK_DEBUG */

	DeviceTable(PFN_vkGetDeviceProcAddr addr, VkDevice device);

#if defined(VK_VERSION_1_0)
	const PFN_vkGetDeviceProcAddr vkGetDeviceProcAddr = nullptr;
	const PFN_vkDestroyDevice vkDestroyDevice = nullptr;
	const PFN_vkGetDeviceQueue vkGetDeviceQueue = nullptr;
	const PFN_vkQueueSubmit vkQueueSubmit = nullptr;
	const PFN_vkQueueWaitIdle vkQueueWaitIdle = nullptr;
	const PFN_vkDeviceWaitIdle vkDeviceWaitIdle = nullptr;
	const PFN_vkAllocateMemory vkAllocateMemory = nullptr;
	const PFN_vkFreeMemory vkFreeMemory = nullptr;
	const PFN_vkMapMemory vkMapMemory = nullptr;
	const PFN_vkUnmapMemory vkUnmapMemory = nullptr;
	const PFN_vkFlushMappedMemoryRanges vkFlushMappedMemoryRanges = nullptr;
	const PFN_vkInvalidateMappedMemoryRanges vkInvalidateMappedMemoryRanges = nullptr;
	const PFN_vkGetDeviceMemoryCommitment vkGetDeviceMemoryCommitment = nullptr;
	const PFN_vkBindBufferMemory vkBindBufferMemory = nullptr;
	const PFN_vkBindImageMemory vkBindImageMemory = nullptr;
	const PFN_vkGetBufferMemoryRequirements vkGetBufferMemoryRequirements = nullptr;
	const PFN_vkGetImageMemoryRequirements vkGetImageMemoryRequirements = nullptr;
	const PFN_vkGetImageSparseMemoryRequirements vkGetImageSparseMemoryRequirements = nullptr;
	const PFN_vkQueueBindSparse vkQueueBindSparse = nullptr;
	const PFN_vkCreateFence vkCreateFence = nullptr;
	const PFN_vkDestroyFence vkDestroyFence = nullptr;
	const PFN_vkResetFences vkResetFences = nullptr;
	const PFN_vkGetFenceStatus vkGetFenceStatus = nullptr;
	const PFN_vkWaitForFences vkWaitForFences = nullptr;
	const PFN_vkCreateSemaphore vkCreateSemaphore = nullptr;
	const PFN_vkDestroySemaphore vkDestroySemaphore = nullptr;
	const PFN_vkCreateEvent vkCreateEvent = nullptr;
	const PFN_vkDestroyEvent vkDestroyEvent = nullptr;
	const PFN_vkGetEventStatus vkGetEventStatus = nullptr;
	const PFN_vkSetEvent vkSetEvent = nullptr;
	const PFN_vkResetEvent vkResetEvent = nullptr;
	const PFN_vkCreateQueryPool vkCreateQueryPool = nullptr;
	const PFN_vkDestroyQueryPool vkDestroyQueryPool = nullptr;
	const PFN_vkGetQueryPoolResults vkGetQueryPoolResults = nullptr;
	const PFN_vkCreateBuffer vkCreateBuffer = nullptr;
	const PFN_vkDestroyBuffer vkDestroyBuffer = nullptr;
	const PFN_vkCreateBufferView vkCreateBufferView = nullptr;
	const PFN_vkDestroyBufferView vkDestroyBufferView = nullptr;
	const PFN_vkCreateImage vkCreateImage = nullptr;
	const PFN_vkDestroyImage vkDestroyImage = nullptr;
	const PFN_vkGetImageSubresourceLayout vkGetImageSubresourceLayout = nullptr;
	const PFN_vkCreateImageView vkCreateImageView = nullptr;
	const PFN_vkDestroyImageView vkDestroyImageView = nullptr;
	const PFN_vkCreateShaderModule vkCreateShaderModule = nullptr;
	const PFN_vkDestroyShaderModule vkDestroyShaderModule = nullptr;
	const PFN_vkCreatePipelineCache vkCreatePipelineCache = nullptr;
	const PFN_vkDestroyPipelineCache vkDestroyPipelineCache = nullptr;
	const PFN_vkGetPipelineCacheData vkGetPipelineCacheData = nullptr;
	const PFN_vkMergePipelineCaches vkMergePipelineCaches = nullptr;
	const PFN_vkCreateGraphicsPipelines vkCreateGraphicsPipelines = nullptr;
	const PFN_vkCreateComputePipelines vkCreateComputePipelines = nullptr;
	const PFN_vkDestroyPipeline vkDestroyPipeline = nullptr;
	const PFN_vkCreatePipelineLayout vkCreatePipelineLayout = nullptr;
	const PFN_vkDestroyPipelineLayout vkDestroyPipelineLayout = nullptr;
	const PFN_vkCreateSampler vkCreateSampler = nullptr;
	const PFN_vkDestroySampler vkDestroySampler = nullptr;
	const PFN_vkCreateDescriptorSetLayout vkCreateDescriptorSetLayout = nullptr;
	const PFN_vkDestroyDescriptorSetLayout vkDestroyDescriptorSetLayout = nullptr;
	const PFN_vkCreateDescriptorPool vkCreateDescriptorPool = nullptr;
	const PFN_vkDestroyDescriptorPool vkDestroyDescriptorPool = nullptr;
	const PFN_vkResetDescriptorPool vkResetDescriptorPool = nullptr;
	const PFN_vkAllocateDescriptorSets vkAllocateDescriptorSets = nullptr;
	const PFN_vkFreeDescriptorSets vkFreeDescriptorSets = nullptr;
	const PFN_vkUpdateDescriptorSets vkUpdateDescriptorSets = nullptr;
	const PFN_vkCreateFramebuffer vkCreateFramebuffer = nullptr;
	const PFN_vkDestroyFramebuffer vkDestroyFramebuffer = nullptr;
	const PFN_vkCreateRenderPass vkCreateRenderPass = nullptr;
	const PFN_vkDestroyRenderPass vkDestroyRenderPass = nullptr;
	const PFN_vkGetRenderAreaGranularity vkGetRenderAreaGranularity = nullptr;
	const PFN_vkCreateCommandPool vkCreateCommandPool = nullptr;
	const PFN_vkDestroyCommandPool vkDestroyCommandPool = nullptr;
	const PFN_vkResetCommandPool vkResetCommandPool = nullptr;
	const PFN_vkAllocateCommandBuffers vkAllocateCommandBuffers = nullptr;
	const PFN_vkFreeCommandBuffers vkFreeCommandBuffers = nullptr;
	const PFN_vkBeginCommandBuffer vkBeginCommandBuffer = nullptr;
	const PFN_vkEndCommandBuffer vkEndCommandBuffer = nullptr;
	const PFN_vkResetCommandBuffer vkResetCommandBuffer = nullptr;
	const PFN_vkCmdBindPipeline vkCmdBindPipeline = nullptr;
	const PFN_vkCmdSetViewport vkCmdSetViewport = nullptr;
	const PFN_vkCmdSetScissor vkCmdSetScissor = nullptr;
	const PFN_vkCmdSetLineWidth vkCmdSetLineWidth = nullptr;
	const PFN_vkCmdSetDepthBias vkCmdSetDepthBias = nullptr;
	const PFN_vkCmdSetBlendConstants vkCmdSetBlendConstants = nullptr;
	const PFN_vkCmdSetDepthBounds vkCmdSetDepthBounds = nullptr;
	const PFN_vkCmdSetStencilCompareMask vkCmdSetStencilCompareMask = nullptr;
	const PFN_vkCmdSetStencilWriteMask vkCmdSetStencilWriteMask = nullptr;
	const PFN_vkCmdSetStencilReference vkCmdSetStencilReference = nullptr;
	const PFN_vkCmdBindDescriptorSets vkCmdBindDescriptorSets = nullptr;
	const PFN_vkCmdBindIndexBuffer vkCmdBindIndexBuffer = nullptr;
	const PFN_vkCmdBindVertexBuffers vkCmdBindVertexBuffers = nullptr;
	const PFN_vkCmdDraw vkCmdDraw = nullptr;
	const PFN_vkCmdDrawIndexed vkCmdDrawIndexed = nullptr;
	const PFN_vkCmdDrawIndirect vkCmdDrawIndirect = nullptr;
	const PFN_vkCmdDrawIndexedIndirect vkCmdDrawIndexedIndirect = nullptr;
	const PFN_vkCmdDispatch vkCmdDispatch = nullptr;
	const PFN_vkCmdDispatchIndirect vkCmdDispatchIndirect = nullptr;
	const PFN_vkCmdCopyBuffer vkCmdCopyBuffer = nullptr;
	const PFN_vkCmdCopyImage vkCmdCopyImage = nullptr;
	const PFN_vkCmdBlitImage vkCmdBlitImage = nullptr;
	const PFN_vkCmdCopyBufferToImage vkCmdCopyBufferToImage = nullptr;
	const PFN_vkCmdCopyImageToBuffer vkCmdCopyImageToBuffer = nullptr;
	const PFN_vkCmdUpdateBuffer vkCmdUpdateBuffer = nullptr;
	const PFN_vkCmdFillBuffer vkCmdFillBuffer = nullptr;
	const PFN_vkCmdClearColorImage vkCmdClearColorImage = nullptr;
	const PFN_vkCmdClearDepthStencilImage vkCmdClearDepthStencilImage = nullptr;
	const PFN_vkCmdClearAttachments vkCmdClearAttachments = nullptr;
	const PFN_vkCmdResolveImage vkCmdResolveImage = nullptr;
	const PFN_vkCmdSetEvent vkCmdSetEvent = nullptr;
	const PFN_vkCmdResetEvent vkCmdResetEvent = nullptr;
	const PFN_vkCmdWaitEvents vkCmdWaitEvents = nullptr;
	const PFN_vkCmdPipelineBarrier vkCmdPipelineBarrier = nullptr;
	const PFN_vkCmdBeginQuery vkCmdBeginQuery = nullptr;
	const PFN_vkCmdEndQuery vkCmdEndQuery = nullptr;
	const PFN_vkCmdResetQueryPool vkCmdResetQueryPool = nullptr;
	const PFN_vkCmdWriteTimestamp vkCmdWriteTimestamp = nullptr;
	const PFN_vkCmdCopyQueryPoolResults vkCmdCopyQueryPoolResults = nullptr;
	const PFN_vkCmdPushConstants vkCmdPushConstants = nullptr;
	const PFN_vkCmdBeginRenderPass vkCmdBeginRenderPass = nullptr;
	const PFN_vkCmdNextSubpass vkCmdNextSubpass = nullptr;
	const PFN_vkCmdEndRenderPass vkCmdEndRenderPass = nullptr;
	const PFN_vkCmdExecuteCommands vkCmdExecuteCommands = nullptr;
#endif /* defined(VK_VERSION_1_0) */
#if defined(VK_VERSION_1_1)
	const PFN_vkBindBufferMemory2 vkBindBufferMemory2 = nullptr;
	const PFN_vkBindImageMemory2 vkBindImageMemory2 = nullptr;
	const PFN_vkGetDeviceGroupPeerMemoryFeatures vkGetDeviceGroupPeerMemoryFeatures = nullptr;
	const PFN_vkCmdSetDeviceMask vkCmdSetDeviceMask = nullptr;
	const PFN_vkCmdDispatchBase vkCmdDispatchBase = nullptr;
	const PFN_vkGetImageMemoryRequirements2 vkGetImageMemoryRequirements2 = nullptr;
	const PFN_vkGetBufferMemoryRequirements2 vkGetBufferMemoryRequirements2 = nullptr;
	const PFN_vkGetImageSparseMemoryRequirements2 vkGetImageSparseMemoryRequirements2 = nullptr;
	const PFN_vkTrimCommandPool vkTrimCommandPool = nullptr;
	const PFN_vkGetDeviceQueue2 vkGetDeviceQueue2 = nullptr;
	const PFN_vkCreateSamplerYcbcrConversion vkCreateSamplerYcbcrConversion = nullptr;
	const PFN_vkDestroySamplerYcbcrConversion vkDestroySamplerYcbcrConversion = nullptr;
	const PFN_vkCreateDescriptorUpdateTemplate vkCreateDescriptorUpdateTemplate = nullptr;
	const PFN_vkDestroyDescriptorUpdateTemplate vkDestroyDescriptorUpdateTemplate = nullptr;
	const PFN_vkUpdateDescriptorSetWithTemplate vkUpdateDescriptorSetWithTemplate = nullptr;
	const PFN_vkGetDescriptorSetLayoutSupport vkGetDescriptorSetLayoutSupport = nullptr;
#endif /* defined(VK_VERSION_1_1) */
#if defined(VK_VERSION_1_2)
	const PFN_vkCmdDrawIndirectCount vkCmdDrawIndirectCount = nullptr;
	const PFN_vkCmdDrawIndexedIndirectCount vkCmdDrawIndexedIndirectCount = nullptr;
	const PFN_vkCreateRenderPass2 vkCreateRenderPass2 = nullptr;
	const PFN_vkCmdBeginRenderPass2 vkCmdBeginRenderPass2 = nullptr;
	const PFN_vkCmdNextSubpass2 vkCmdNextSubpass2 = nullptr;
	const PFN_vkCmdEndRenderPass2 vkCmdEndRenderPass2 = nullptr;
	const PFN_vkResetQueryPool vkResetQueryPool = nullptr;
	const PFN_vkGetSemaphoreCounterValue vkGetSemaphoreCounterValue = nullptr;
	const PFN_vkWaitSemaphores vkWaitSemaphores = nullptr;
	const PFN_vkSignalSemaphore vkSignalSemaphore = nullptr;
	const PFN_vkGetBufferDeviceAddress vkGetBufferDeviceAddress = nullptr;
	const PFN_vkGetBufferOpaqueCaptureAddress vkGetBufferOpaqueCaptureAddress = nullptr;
	const PFN_vkGetDeviceMemoryOpaqueCaptureAddress vkGetDeviceMemoryOpaqueCaptureAddress = nullptr;
#endif /* defined(VK_VERSION_1_2) */
#if defined(VK_VERSION_1_3)
	const PFN_vkCreatePrivateDataSlot vkCreatePrivateDataSlot = nullptr;
	const PFN_vkDestroyPrivateDataSlot vkDestroyPrivateDataSlot = nullptr;
	const PFN_vkSetPrivateData vkSetPrivateData = nullptr;
	const PFN_vkGetPrivateData vkGetPrivateData = nullptr;
	const PFN_vkCmdSetEvent2 vkCmdSetEvent2 = nullptr;
	const PFN_vkCmdResetEvent2 vkCmdResetEvent2 = nullptr;
	const PFN_vkCmdWaitEvents2 vkCmdWaitEvents2 = nullptr;
	const PFN_vkCmdPipelineBarrier2 vkCmdPipelineBarrier2 = nullptr;
	const PFN_vkCmdWriteTimestamp2 vkCmdWriteTimestamp2 = nullptr;
	const PFN_vkQueueSubmit2 vkQueueSubmit2 = nullptr;
	const PFN_vkCmdCopyBuffer2 vkCmdCopyBuffer2 = nullptr;
	const PFN_vkCmdCopyImage2 vkCmdCopyImage2 = nullptr;
	const PFN_vkCmdCopyBufferToImage2 vkCmdCopyBufferToImage2 = nullptr;
	const PFN_vkCmdCopyImageToBuffer2 vkCmdCopyImageToBuffer2 = nullptr;
	const PFN_vkCmdBlitImage2 vkCmdBlitImage2 = nullptr;
	const PFN_vkCmdResolveImage2 vkCmdResolveImage2 = nullptr;
	const PFN_vkCmdBeginRendering vkCmdBeginRendering = nullptr;
	const PFN_vkCmdEndRendering vkCmdEndRendering = nullptr;
	const PFN_vkCmdSetCullMode vkCmdSetCullMode = nullptr;
	const PFN_vkCmdSetFrontFace vkCmdSetFrontFace = nullptr;
	const PFN_vkCmdSetPrimitiveTopology vkCmdSetPrimitiveTopology = nullptr;
	const PFN_vkCmdSetViewportWithCount vkCmdSetViewportWithCount = nullptr;
	const PFN_vkCmdSetScissorWithCount vkCmdSetScissorWithCount = nullptr;
	const PFN_vkCmdBindVertexBuffers2 vkCmdBindVertexBuffers2 = nullptr;
	const PFN_vkCmdSetDepthTestEnable vkCmdSetDepthTestEnable = nullptr;
	const PFN_vkCmdSetDepthWriteEnable vkCmdSetDepthWriteEnable = nullptr;
	const PFN_vkCmdSetDepthCompareOp vkCmdSetDepthCompareOp = nullptr;
	const PFN_vkCmdSetDepthBoundsTestEnable vkCmdSetDepthBoundsTestEnable = nullptr;
	const PFN_vkCmdSetStencilTestEnable vkCmdSetStencilTestEnable = nullptr;
	const PFN_vkCmdSetStencilOp vkCmdSetStencilOp = nullptr;
	const PFN_vkCmdSetRasterizerDiscardEnable vkCmdSetRasterizerDiscardEnable = nullptr;
	const PFN_vkCmdSetDepthBiasEnable vkCmdSetDepthBiasEnable = nullptr;
	const PFN_vkCmdSetPrimitiveRestartEnable vkCmdSetPrimitiveRestartEnable = nullptr;
	const PFN_vkGetDeviceBufferMemoryRequirements vkGetDeviceBufferMemoryRequirements = nullptr;
	const PFN_vkGetDeviceImageMemoryRequirements vkGetDeviceImageMemoryRequirements = nullptr;
	const PFN_vkGetDeviceImageSparseMemoryRequirements vkGetDeviceImageSparseMemoryRequirements = nullptr;
#endif /* defined(VK_VERSION_1_3) */
#if defined(VK_KHR_swapchain)
	const PFN_vkCreateSwapchainKHR vkCreateSwapchainKHR = nullptr;
	const PFN_vkDestroySwapchainKHR vkDestroySwapchainKHR = nullptr;
	const PFN_vkGetSwapchainImagesKHR vkGetSwapchainImagesKHR = nullptr;
	const PFN_vkAcquireNextImageKHR vkAcquireNextImageKHR = nullptr;
	const PFN_vkQueuePresentKHR vkQueuePresentKHR = nullptr;
#endif /* defined(VK_KHR_swapchain) */
#if (defined(VK_KHR_swapchain) && defined(VK_VERSION_1_1)) || (defined(VK_KHR_device_group) && defined(VK_KHR_surface))
	const PFN_vkGetDeviceGroupPresentCapabilitiesKHR vkGetDeviceGroupPresentCapabilitiesKHR = nullptr;
	const PFN_vkGetDeviceGroupSurfacePresentModesKHR vkGetDeviceGroupSurfacePresentModesKHR = nullptr;
#endif /* (defined(VK_KHR_swapchain) && defined(VK_VERSION_1_1)) || (defined(VK_KHR_device_group) && defined(VK_KHR_surface)) */
#if (defined(VK_KHR_swapchain) && defined(VK_VERSION_1_1)) || (defined(VK_KHR_device_group) && defined(VK_KHR_swapchain))
	const PFN_vkAcquireNextImage2KHR vkAcquireNextImage2KHR = nullptr;
#endif /* (defined(VK_KHR_swapchain) && defined(VK_VERSION_1_1)) || (defined(VK_KHR_device_group) && defined(VK_KHR_swapchain)) */
#if defined(VK_KHR_display_swapchain)
	const PFN_vkCreateSharedSwapchainsKHR vkCreateSharedSwapchainsKHR = nullptr;
#endif /* defined(VK_KHR_display_swapchain) */
#if defined(VK_EXT_debug_marker)
	const PFN_vkDebugMarkerSetObjectTagEXT vkDebugMarkerSetObjectTagEXT = nullptr;
	const PFN_vkDebugMarkerSetObjectNameEXT vkDebugMarkerSetObjectNameEXT = nullptr;
	const PFN_vkCmdDebugMarkerBeginEXT vkCmdDebugMarkerBeginEXT = nullptr;
	const PFN_vkCmdDebugMarkerEndEXT vkCmdDebugMarkerEndEXT = nullptr;
	const PFN_vkCmdDebugMarkerInsertEXT vkCmdDebugMarkerInsertEXT = nullptr;
#endif /* defined(VK_EXT_debug_marker) */
#if defined(VK_KHR_video_queue)
	const PFN_vkCreateVideoSessionKHR vkCreateVideoSessionKHR = nullptr;
	const PFN_vkDestroyVideoSessionKHR vkDestroyVideoSessionKHR = nullptr;
	const PFN_vkGetVideoSessionMemoryRequirementsKHR vkGetVideoSessionMemoryRequirementsKHR = nullptr;
	const PFN_vkBindVideoSessionMemoryKHR vkBindVideoSessionMemoryKHR = nullptr;
	const PFN_vkCreateVideoSessionParametersKHR vkCreateVideoSessionParametersKHR = nullptr;
	const PFN_vkUpdateVideoSessionParametersKHR vkUpdateVideoSessionParametersKHR = nullptr;
	const PFN_vkDestroyVideoSessionParametersKHR vkDestroyVideoSessionParametersKHR = nullptr;
	const PFN_vkCmdBeginVideoCodingKHR vkCmdBeginVideoCodingKHR = nullptr;
	const PFN_vkCmdEndVideoCodingKHR vkCmdEndVideoCodingKHR = nullptr;
	const PFN_vkCmdControlVideoCodingKHR vkCmdControlVideoCodingKHR = nullptr;
#endif /* defined(VK_KHR_video_queue) */
#if defined(VK_KHR_video_decode_queue)
	const PFN_vkCmdDecodeVideoKHR vkCmdDecodeVideoKHR = nullptr;
#endif /* defined(VK_KHR_video_decode_queue) */
#if defined(VK_EXT_transform_feedback)
	const PFN_vkCmdBindTransformFeedbackBuffersEXT vkCmdBindTransformFeedbackBuffersEXT = nullptr;
	const PFN_vkCmdBeginTransformFeedbackEXT vkCmdBeginTransformFeedbackEXT = nullptr;
	const PFN_vkCmdEndTransformFeedbackEXT vkCmdEndTransformFeedbackEXT = nullptr;
	const PFN_vkCmdBeginQueryIndexedEXT vkCmdBeginQueryIndexedEXT = nullptr;
	const PFN_vkCmdEndQueryIndexedEXT vkCmdEndQueryIndexedEXT = nullptr;
	const PFN_vkCmdDrawIndirectByteCountEXT vkCmdDrawIndirectByteCountEXT = nullptr;
#endif /* defined(VK_EXT_transform_feedback) */
#if defined(VK_NVX_binary_import)
	const PFN_vkCreateCuModuleNVX vkCreateCuModuleNVX = nullptr;
	const PFN_vkCreateCuFunctionNVX vkCreateCuFunctionNVX = nullptr;
	const PFN_vkDestroyCuModuleNVX vkDestroyCuModuleNVX = nullptr;
	const PFN_vkDestroyCuFunctionNVX vkDestroyCuFunctionNVX = nullptr;
	const PFN_vkCmdCuLaunchKernelNVX vkCmdCuLaunchKernelNVX = nullptr;
#endif /* defined(VK_NVX_binary_import) */
#if defined(VK_NVX_image_view_handle)
	const PFN_vkGetImageViewHandleNVX vkGetImageViewHandleNVX = nullptr;
	const PFN_vkGetImageViewAddressNVX vkGetImageViewAddressNVX = nullptr;
#endif /* defined(VK_NVX_image_view_handle) */
#if defined(VK_AMD_draw_indirect_count)
	const PFN_vkCmdDrawIndirectCountAMD vkCmdDrawIndirectCountAMD = nullptr;
	const PFN_vkCmdDrawIndexedIndirectCountAMD vkCmdDrawIndexedIndirectCountAMD = nullptr;
#endif /* defined(VK_AMD_draw_indirect_count) */
#if defined(VK_AMD_shader_info)
	const PFN_vkGetShaderInfoAMD vkGetShaderInfoAMD = nullptr;
#endif /* defined(VK_AMD_shader_info) */
#if defined(VK_KHR_dynamic_rendering)
	const PFN_vkCmdBeginRenderingKHR vkCmdBeginRenderingKHR = nullptr;
	const PFN_vkCmdEndRenderingKHR vkCmdEndRenderingKHR = nullptr;
#endif /* defined(VK_KHR_dynamic_rendering) */
#if defined(VK_NV_external_memory_win32)
	const PFN_vkGetMemoryWin32HandleNV vkGetMemoryWin32HandleNV = nullptr;
#endif /* defined(VK_NV_external_memory_win32) */
#if defined(VK_KHR_device_group)
	const PFN_vkGetDeviceGroupPeerMemoryFeaturesKHR vkGetDeviceGroupPeerMemoryFeaturesKHR = nullptr;
	const PFN_vkCmdSetDeviceMaskKHR vkCmdSetDeviceMaskKHR = nullptr;
	const PFN_vkCmdDispatchBaseKHR vkCmdDispatchBaseKHR = nullptr;
#endif /* defined(VK_KHR_device_group) */
#if defined(VK_KHR_maintenance1)
	const PFN_vkTrimCommandPoolKHR vkTrimCommandPoolKHR = nullptr;
#endif /* defined(VK_KHR_maintenance1) */
#if defined(VK_KHR_external_memory_win32)
	const PFN_vkGetMemoryWin32HandleKHR vkGetMemoryWin32HandleKHR = nullptr;
	const PFN_vkGetMemoryWin32HandlePropertiesKHR vkGetMemoryWin32HandlePropertiesKHR = nullptr;
#endif /* defined(VK_KHR_external_memory_win32) */
#if defined(VK_KHR_external_memory_fd)
	const PFN_vkGetMemoryFdKHR vkGetMemoryFdKHR = nullptr;
	const PFN_vkGetMemoryFdPropertiesKHR vkGetMemoryFdPropertiesKHR = nullptr;
#endif /* defined(VK_KHR_external_memory_fd) */
#if defined(VK_KHR_external_semaphore_win32)
	const PFN_vkImportSemaphoreWin32HandleKHR vkImportSemaphoreWin32HandleKHR = nullptr;
	const PFN_vkGetSemaphoreWin32HandleKHR vkGetSemaphoreWin32HandleKHR = nullptr;
#endif /* defined(VK_KHR_external_semaphore_win32) */
#if defined(VK_KHR_external_semaphore_fd)
	const PFN_vkImportSemaphoreFdKHR vkImportSemaphoreFdKHR = nullptr;
	const PFN_vkGetSemaphoreFdKHR vkGetSemaphoreFdKHR = nullptr;
#endif /* defined(VK_KHR_external_semaphore_fd) */
#if defined(VK_KHR_push_descriptor)
	const PFN_vkCmdPushDescriptorSetKHR vkCmdPushDescriptorSetKHR = nullptr;
#endif /* defined(VK_KHR_push_descriptor) */
#if (defined(VK_KHR_push_descriptor) && defined(VK_VERSION_1_1)) || (defined(VK_KHR_push_descriptor) && defined(VK_KHR_descriptor_update_template)) || (defined(VK_KHR_descriptor_update_template) && defined(VK_KHR_push_descriptor))
	const PFN_vkCmdPushDescriptorSetWithTemplateKHR vkCmdPushDescriptorSetWithTemplateKHR = nullptr;
#endif /* (defined(VK_KHR_push_descriptor) && defined(VK_VERSION_1_1)) || (defined(VK_KHR_push_descriptor) && defined(VK_KHR_descriptor_update_template)) || (defined(VK_KHR_descriptor_update_template) && defined(VK_KHR_push_descriptor)) */
#if defined(VK_EXT_conditional_rendering)
	const PFN_vkCmdBeginConditionalRenderingEXT vkCmdBeginConditionalRenderingEXT = nullptr;
	const PFN_vkCmdEndConditionalRenderingEXT vkCmdEndConditionalRenderingEXT = nullptr;
#endif /* defined(VK_EXT_conditional_rendering) */
#if defined(VK_KHR_descriptor_update_template)
	const PFN_vkCreateDescriptorUpdateTemplateKHR vkCreateDescriptorUpdateTemplateKHR = nullptr;
	const PFN_vkDestroyDescriptorUpdateTemplateKHR vkDestroyDescriptorUpdateTemplateKHR = nullptr;
	const PFN_vkUpdateDescriptorSetWithTemplateKHR vkUpdateDescriptorSetWithTemplateKHR = nullptr;
#endif /* defined(VK_KHR_descriptor_update_template) */
#if defined(VK_NV_clip_space_w_scaling)
	const PFN_vkCmdSetViewportWScalingNV vkCmdSetViewportWScalingNV = nullptr;
#endif /* defined(VK_NV_clip_space_w_scaling) */
#if defined(VK_EXT_display_control)
	const PFN_vkDisplayPowerControlEXT vkDisplayPowerControlEXT = nullptr;
	const PFN_vkRegisterDeviceEventEXT vkRegisterDeviceEventEXT = nullptr;
	const PFN_vkRegisterDisplayEventEXT vkRegisterDisplayEventEXT = nullptr;
	const PFN_vkGetSwapchainCounterEXT vkGetSwapchainCounterEXT = nullptr;
#endif /* defined(VK_EXT_display_control) */
#if defined(VK_GOOGLE_display_timing)
	const PFN_vkGetRefreshCycleDurationGOOGLE vkGetRefreshCycleDurationGOOGLE = nullptr;
	const PFN_vkGetPastPresentationTimingGOOGLE vkGetPastPresentationTimingGOOGLE = nullptr;
#endif /* defined(VK_GOOGLE_display_timing) */
#if defined(VK_EXT_discard_rectangles)
	const PFN_vkCmdSetDiscardRectangleEXT vkCmdSetDiscardRectangleEXT = nullptr;
#endif /* defined(VK_EXT_discard_rectangles) */
#if defined(VK_EXT_hdr_metadata)
	const PFN_vkSetHdrMetadataEXT vkSetHdrMetadataEXT = nullptr;
#endif /* defined(VK_EXT_hdr_metadata) */
#if defined(VK_KHR_create_renderpass2)
	const PFN_vkCreateRenderPass2KHR vkCreateRenderPass2KHR = nullptr;
	const PFN_vkCmdBeginRenderPass2KHR vkCmdBeginRenderPass2KHR = nullptr;
	const PFN_vkCmdNextSubpass2KHR vkCmdNextSubpass2KHR = nullptr;
	const PFN_vkCmdEndRenderPass2KHR vkCmdEndRenderPass2KHR = nullptr;
#endif /* defined(VK_KHR_create_renderpass2) */
#if defined(VK_KHR_shared_presentable_image)
	const PFN_vkGetSwapchainStatusKHR vkGetSwapchainStatusKHR = nullptr;
#endif /* defined(VK_KHR_shared_presentable_image) */
#if defined(VK_KHR_external_fence_win32)
	const PFN_vkImportFenceWin32HandleKHR vkImportFenceWin32HandleKHR = nullptr;
	const PFN_vkGetFenceWin32HandleKHR vkGetFenceWin32HandleKHR = nullptr;
#endif /* defined(VK_KHR_external_fence_win32) */
#if defined(VK_KHR_external_fence_fd)
	const PFN_vkImportFenceFdKHR vkImportFenceFdKHR = nullptr;
	const PFN_vkGetFenceFdKHR vkGetFenceFdKHR = nullptr;
#endif /* defined(VK_KHR_external_fence_fd) */
#if defined(VK_KHR_performance_query)
	const PFN_vkAcquireProfilingLockKHR vkAcquireProfilingLockKHR = nullptr;
	const PFN_vkReleaseProfilingLockKHR vkReleaseProfilingLockKHR = nullptr;
#endif /* defined(VK_KHR_performance_query) */
#if defined(VK_ANDROID_external_memory_android_hardware_buffer)
	const PFN_vkGetAndroidHardwareBufferPropertiesANDROID vkGetAndroidHardwareBufferPropertiesANDROID = nullptr;
	const PFN_vkGetMemoryAndroidHardwareBufferANDROID vkGetMemoryAndroidHardwareBufferANDROID = nullptr;
#endif /* defined(VK_ANDROID_external_memory_android_hardware_buffer) */
#if defined(VK_EXT_sample_locations)
	const PFN_vkCmdSetSampleLocationsEXT vkCmdSetSampleLocationsEXT = nullptr;
#endif /* defined(VK_EXT_sample_locations) */
#if defined(VK_KHR_get_memory_requirements2)
	const PFN_vkGetImageMemoryRequirements2KHR vkGetImageMemoryRequirements2KHR = nullptr;
	const PFN_vkGetBufferMemoryRequirements2KHR vkGetBufferMemoryRequirements2KHR = nullptr;
	const PFN_vkGetImageSparseMemoryRequirements2KHR vkGetImageSparseMemoryRequirements2KHR = nullptr;
#endif /* defined(VK_KHR_get_memory_requirements2) */
#if defined(VK_KHR_acceleration_structure)
	const PFN_vkCreateAccelerationStructureKHR vkCreateAccelerationStructureKHR = nullptr;
	const PFN_vkDestroyAccelerationStructureKHR vkDestroyAccelerationStructureKHR = nullptr;
	const PFN_vkCmdBuildAccelerationStructuresKHR vkCmdBuildAccelerationStructuresKHR = nullptr;
	const PFN_vkCmdBuildAccelerationStructuresIndirectKHR vkCmdBuildAccelerationStructuresIndirectKHR = nullptr;
	const PFN_vkBuildAccelerationStructuresKHR vkBuildAccelerationStructuresKHR = nullptr;
	const PFN_vkCopyAccelerationStructureKHR vkCopyAccelerationStructureKHR = nullptr;
	const PFN_vkCopyAccelerationStructureToMemoryKHR vkCopyAccelerationStructureToMemoryKHR = nullptr;
	const PFN_vkCopyMemoryToAccelerationStructureKHR vkCopyMemoryToAccelerationStructureKHR = nullptr;
	const PFN_vkWriteAccelerationStructuresPropertiesKHR vkWriteAccelerationStructuresPropertiesKHR = nullptr;
	const PFN_vkCmdCopyAccelerationStructureKHR vkCmdCopyAccelerationStructureKHR = nullptr;
	const PFN_vkCmdCopyAccelerationStructureToMemoryKHR vkCmdCopyAccelerationStructureToMemoryKHR = nullptr;
	const PFN_vkCmdCopyMemoryToAccelerationStructureKHR vkCmdCopyMemoryToAccelerationStructureKHR = nullptr;
	const PFN_vkGetAccelerationStructureDeviceAddressKHR vkGetAccelerationStructureDeviceAddressKHR = nullptr;
	const PFN_vkCmdWriteAccelerationStructuresPropertiesKHR vkCmdWriteAccelerationStructuresPropertiesKHR = nullptr;
	const PFN_vkGetDeviceAccelerationStructureCompatibilityKHR vkGetDeviceAccelerationStructureCompatibilityKHR = nullptr;
	const PFN_vkGetAccelerationStructureBuildSizesKHR vkGetAccelerationStructureBuildSizesKHR = nullptr;
#endif /* defined(VK_KHR_acceleration_structure) */
#if defined(VK_KHR_ray_tracing_pipeline)
	const PFN_vkCmdTraceRaysKHR vkCmdTraceRaysKHR = nullptr;
	const PFN_vkCreateRayTracingPipelinesKHR vkCreateRayTracingPipelinesKHR = nullptr;
	const PFN_vkGetRayTracingShaderGroupHandlesKHR vkGetRayTracingShaderGroupHandlesKHR = nullptr;
	const PFN_vkGetRayTracingCaptureReplayShaderGroupHandlesKHR vkGetRayTracingCaptureReplayShaderGroupHandlesKHR = nullptr;
	const PFN_vkCmdTraceRaysIndirectKHR vkCmdTraceRaysIndirectKHR = nullptr;
	const PFN_vkGetRayTracingShaderGroupStackSizeKHR vkGetRayTracingShaderGroupStackSizeKHR = nullptr;
	const PFN_vkCmdSetRayTracingPipelineStackSizeKHR vkCmdSetRayTracingPipelineStackSizeKHR = nullptr;
#endif /* defined(VK_KHR_ray_tracing_pipeline) */
#if defined(VK_KHR_sampler_ycbcr_conversion)
	const PFN_vkCreateSamplerYcbcrConversionKHR vkCreateSamplerYcbcrConversionKHR = nullptr;
	const PFN_vkDestroySamplerYcbcrConversionKHR vkDestroySamplerYcbcrConversionKHR = nullptr;
#endif /* defined(VK_KHR_sampler_ycbcr_conversion) */
#if defined(VK_KHR_bind_memory2)
	const PFN_vkBindBufferMemory2KHR vkBindBufferMemory2KHR = nullptr;
	const PFN_vkBindImageMemory2KHR vkBindImageMemory2KHR = nullptr;
#endif /* defined(VK_KHR_bind_memory2) */
#if defined(VK_EXT_image_drm_format_modifier)
	const PFN_vkGetImageDrmFormatModifierPropertiesEXT vkGetImageDrmFormatModifierPropertiesEXT = nullptr;
#endif /* defined(VK_EXT_image_drm_format_modifier) */
#if defined(VK_EXT_validation_cache)
	const PFN_vkCreateValidationCacheEXT vkCreateValidationCacheEXT = nullptr;
	const PFN_vkDestroyValidationCacheEXT vkDestroyValidationCacheEXT = nullptr;
	const PFN_vkMergeValidationCachesEXT vkMergeValidationCachesEXT = nullptr;
	const PFN_vkGetValidationCacheDataEXT vkGetValidationCacheDataEXT = nullptr;
#endif /* defined(VK_EXT_validation_cache) */
#if defined(VK_NV_shading_rate_image)
	const PFN_vkCmdBindShadingRateImageNV vkCmdBindShadingRateImageNV = nullptr;
	const PFN_vkCmdSetViewportShadingRatePaletteNV vkCmdSetViewportShadingRatePaletteNV = nullptr;
	const PFN_vkCmdSetCoarseSampleOrderNV vkCmdSetCoarseSampleOrderNV = nullptr;
#endif /* defined(VK_NV_shading_rate_image) */
#if defined(VK_NV_ray_tracing)
	const PFN_vkCreateAccelerationStructureNV vkCreateAccelerationStructureNV = nullptr;
	const PFN_vkDestroyAccelerationStructureNV vkDestroyAccelerationStructureNV = nullptr;
	const PFN_vkGetAccelerationStructureMemoryRequirementsNV vkGetAccelerationStructureMemoryRequirementsNV = nullptr;
	const PFN_vkBindAccelerationStructureMemoryNV vkBindAccelerationStructureMemoryNV = nullptr;
	const PFN_vkCmdBuildAccelerationStructureNV vkCmdBuildAccelerationStructureNV = nullptr;
	const PFN_vkCmdCopyAccelerationStructureNV vkCmdCopyAccelerationStructureNV = nullptr;
	const PFN_vkCmdTraceRaysNV vkCmdTraceRaysNV = nullptr;
	const PFN_vkCreateRayTracingPipelinesNV vkCreateRayTracingPipelinesNV = nullptr;
	const PFN_vkGetRayTracingShaderGroupHandlesNV vkGetRayTracingShaderGroupHandlesNV = nullptr;
	const PFN_vkGetAccelerationStructureHandleNV vkGetAccelerationStructureHandleNV = nullptr;
	const PFN_vkCmdWriteAccelerationStructuresPropertiesNV vkCmdWriteAccelerationStructuresPropertiesNV = nullptr;
	const PFN_vkCompileDeferredNV vkCompileDeferredNV = nullptr;
#endif /* defined(VK_NV_ray_tracing) */
#if defined(VK_KHR_maintenance3)
	const PFN_vkGetDescriptorSetLayoutSupportKHR vkGetDescriptorSetLayoutSupportKHR = nullptr;
#endif /* defined(VK_KHR_maintenance3) */
#if defined(VK_KHR_draw_indirect_count)
	const PFN_vkCmdDrawIndirectCountKHR vkCmdDrawIndirectCountKHR = nullptr;
	const PFN_vkCmdDrawIndexedIndirectCountKHR vkCmdDrawIndexedIndirectCountKHR = nullptr;
#endif /* defined(VK_KHR_draw_indirect_count) */
#if defined(VK_EXT_external_memory_host)
	const PFN_vkGetMemoryHostPointerPropertiesEXT vkGetMemoryHostPointerPropertiesEXT = nullptr;
#endif /* defined(VK_EXT_external_memory_host) */
#if defined(VK_AMD_buffer_marker)
	const PFN_vkCmdWriteBufferMarkerAMD vkCmdWriteBufferMarkerAMD = nullptr;
#endif /* defined(VK_AMD_buffer_marker) */
#if defined(VK_EXT_calibrated_timestamps)
	const PFN_vkGetCalibratedTimestampsEXT vkGetCalibratedTimestampsEXT = nullptr;
#endif /* defined(VK_EXT_calibrated_timestamps) */
#if defined(VK_NV_mesh_shader)
	const PFN_vkCmdDrawMeshTasksNV vkCmdDrawMeshTasksNV = nullptr;
	const PFN_vkCmdDrawMeshTasksIndirectNV vkCmdDrawMeshTasksIndirectNV = nullptr;
	const PFN_vkCmdDrawMeshTasksIndirectCountNV vkCmdDrawMeshTasksIndirectCountNV = nullptr;
#endif /* defined(VK_NV_mesh_shader) */
#if defined(VK_NV_scissor_exclusive)
	const PFN_vkCmdSetExclusiveScissorNV vkCmdSetExclusiveScissorNV = nullptr;
#endif /* defined(VK_NV_scissor_exclusive) */
#if defined(VK_NV_device_diagnostic_checkpoints)
	const PFN_vkCmdSetCheckpointNV vkCmdSetCheckpointNV = nullptr;
	const PFN_vkGetQueueCheckpointDataNV vkGetQueueCheckpointDataNV = nullptr;
#endif /* defined(VK_NV_device_diagnostic_checkpoints) */
#if defined(VK_KHR_timeline_semaphore)
	const PFN_vkGetSemaphoreCounterValueKHR vkGetSemaphoreCounterValueKHR = nullptr;
	const PFN_vkWaitSemaphoresKHR vkWaitSemaphoresKHR = nullptr;
	const PFN_vkSignalSemaphoreKHR vkSignalSemaphoreKHR = nullptr;
#endif /* defined(VK_KHR_timeline_semaphore) */
#if defined(VK_INTEL_performance_query)
	const PFN_vkInitializePerformanceApiINTEL vkInitializePerformanceApiINTEL = nullptr;
	const PFN_vkUninitializePerformanceApiINTEL vkUninitializePerformanceApiINTEL = nullptr;
	const PFN_vkCmdSetPerformanceMarkerINTEL vkCmdSetPerformanceMarkerINTEL = nullptr;
	const PFN_vkCmdSetPerformanceStreamMarkerINTEL vkCmdSetPerformanceStreamMarkerINTEL = nullptr;
	const PFN_vkCmdSetPerformanceOverrideINTEL vkCmdSetPerformanceOverrideINTEL = nullptr;
	const PFN_vkAcquirePerformanceConfigurationINTEL vkAcquirePerformanceConfigurationINTEL = nullptr;
	const PFN_vkReleasePerformanceConfigurationINTEL vkReleasePerformanceConfigurationINTEL = nullptr;
	const PFN_vkQueueSetPerformanceConfigurationINTEL vkQueueSetPerformanceConfigurationINTEL = nullptr;
	const PFN_vkGetPerformanceParameterINTEL vkGetPerformanceParameterINTEL = nullptr;
#endif /* defined(VK_INTEL_performance_query) */
#if defined(VK_AMD_display_native_hdr)
	const PFN_vkSetLocalDimmingAMD vkSetLocalDimmingAMD = nullptr;
#endif /* defined(VK_AMD_display_native_hdr) */
#if defined(VK_KHR_fragment_shading_rate)
	const PFN_vkCmdSetFragmentShadingRateKHR vkCmdSetFragmentShadingRateKHR = nullptr;
#endif /* defined(VK_KHR_fragment_shading_rate) */
#if defined(VK_EXT_buffer_device_address)
	const PFN_vkGetBufferDeviceAddressEXT vkGetBufferDeviceAddressEXT = nullptr;
#endif /* defined(VK_EXT_buffer_device_address) */
#if defined(VK_KHR_present_wait)
	const PFN_vkWaitForPresentKHR vkWaitForPresentKHR = nullptr;
#endif /* defined(VK_KHR_present_wait) */
#if defined(VK_EXT_full_screen_exclusive)
	const PFN_vkAcquireFullScreenExclusiveModeEXT vkAcquireFullScreenExclusiveModeEXT = nullptr;
	const PFN_vkReleaseFullScreenExclusiveModeEXT vkReleaseFullScreenExclusiveModeEXT = nullptr;
#endif /* defined(VK_EXT_full_screen_exclusive) */
#if (defined(VK_EXT_full_screen_exclusive) && defined(VK_KHR_device_group)) || (defined(VK_EXT_full_screen_exclusive) && defined(VK_VERSION_1_1))
	const PFN_vkGetDeviceGroupSurfacePresentModes2EXT vkGetDeviceGroupSurfacePresentModes2EXT = nullptr;
#endif /* (defined(VK_EXT_full_screen_exclusive) && defined(VK_KHR_device_group)) || (defined(VK_EXT_full_screen_exclusive) && defined(VK_VERSION_1_1)) */
#if defined(VK_KHR_buffer_device_address)
	const PFN_vkGetBufferDeviceAddressKHR vkGetBufferDeviceAddressKHR = nullptr;
	const PFN_vkGetBufferOpaqueCaptureAddressKHR vkGetBufferOpaqueCaptureAddressKHR = nullptr;
	const PFN_vkGetDeviceMemoryOpaqueCaptureAddressKHR vkGetDeviceMemoryOpaqueCaptureAddressKHR = nullptr;
#endif /* defined(VK_KHR_buffer_device_address) */
#if defined(VK_EXT_line_rasterization)
	const PFN_vkCmdSetLineStippleEXT vkCmdSetLineStippleEXT = nullptr;
#endif /* defined(VK_EXT_line_rasterization) */
#if defined(VK_EXT_host_query_reset)
	const PFN_vkResetQueryPoolEXT vkResetQueryPoolEXT = nullptr;
#endif /* defined(VK_EXT_host_query_reset) */
#if defined(VK_EXT_extended_dynamic_state)
	const PFN_vkCmdSetCullModeEXT vkCmdSetCullModeEXT = nullptr;
	const PFN_vkCmdSetFrontFaceEXT vkCmdSetFrontFaceEXT = nullptr;
	const PFN_vkCmdSetPrimitiveTopologyEXT vkCmdSetPrimitiveTopologyEXT = nullptr;
	const PFN_vkCmdSetViewportWithCountEXT vkCmdSetViewportWithCountEXT = nullptr;
	const PFN_vkCmdSetScissorWithCountEXT vkCmdSetScissorWithCountEXT = nullptr;
	const PFN_vkCmdBindVertexBuffers2EXT vkCmdBindVertexBuffers2EXT = nullptr;
	const PFN_vkCmdSetDepthTestEnableEXT vkCmdSetDepthTestEnableEXT = nullptr;
	const PFN_vkCmdSetDepthWriteEnableEXT vkCmdSetDepthWriteEnableEXT = nullptr;
	const PFN_vkCmdSetDepthCompareOpEXT vkCmdSetDepthCompareOpEXT = nullptr;
	const PFN_vkCmdSetDepthBoundsTestEnableEXT vkCmdSetDepthBoundsTestEnableEXT = nullptr;
	const PFN_vkCmdSetStencilTestEnableEXT vkCmdSetStencilTestEnableEXT = nullptr;
	const PFN_vkCmdSetStencilOpEXT vkCmdSetStencilOpEXT = nullptr;
#endif /* defined(VK_EXT_extended_dynamic_state) */
#if defined(VK_KHR_deferred_host_operations)
	const PFN_vkCreateDeferredOperationKHR vkCreateDeferredOperationKHR = nullptr;
	const PFN_vkDestroyDeferredOperationKHR vkDestroyDeferredOperationKHR = nullptr;
	const PFN_vkGetDeferredOperationMaxConcurrencyKHR vkGetDeferredOperationMaxConcurrencyKHR = nullptr;
	const PFN_vkGetDeferredOperationResultKHR vkGetDeferredOperationResultKHR = nullptr;
	const PFN_vkDeferredOperationJoinKHR vkDeferredOperationJoinKHR = nullptr;
#endif /* defined(VK_KHR_deferred_host_operations) */
#if defined(VK_KHR_pipeline_executable_properties)
	const PFN_vkGetPipelineExecutablePropertiesKHR vkGetPipelineExecutablePropertiesKHR = nullptr;
	const PFN_vkGetPipelineExecutableStatisticsKHR vkGetPipelineExecutableStatisticsKHR = nullptr;
	const PFN_vkGetPipelineExecutableInternalRepresentationsKHR vkGetPipelineExecutableInternalRepresentationsKHR = nullptr;
#endif /* defined(VK_KHR_pipeline_executable_properties) */
#if defined(VK_NV_device_generated_commands)
	const PFN_vkGetGeneratedCommandsMemoryRequirementsNV vkGetGeneratedCommandsMemoryRequirementsNV = nullptr;
	const PFN_vkCmdPreprocessGeneratedCommandsNV vkCmdPreprocessGeneratedCommandsNV = nullptr;
	const PFN_vkCmdExecuteGeneratedCommandsNV vkCmdExecuteGeneratedCommandsNV = nullptr;
	const PFN_vkCmdBindPipelineShaderGroupNV vkCmdBindPipelineShaderGroupNV = nullptr;
	const PFN_vkCreateIndirectCommandsLayoutNV vkCreateIndirectCommandsLayoutNV = nullptr;
	const PFN_vkDestroyIndirectCommandsLayoutNV vkDestroyIndirectCommandsLayoutNV = nullptr;
#endif /* defined(VK_NV_device_generated_commands) */
#if defined(VK_EXT_private_data)
	const PFN_vkCreatePrivateDataSlotEXT vkCreatePrivateDataSlotEXT = nullptr;
	const PFN_vkDestroyPrivateDataSlotEXT vkDestroyPrivateDataSlotEXT = nullptr;
	const PFN_vkSetPrivateDataEXT vkSetPrivateDataEXT = nullptr;
	const PFN_vkGetPrivateDataEXT vkGetPrivateDataEXT = nullptr;
#endif /* defined(VK_EXT_private_data) */
#if defined(VK_KHR_video_encode_queue)
	const PFN_vkCmdEncodeVideoKHR vkCmdEncodeVideoKHR = nullptr;
#endif /* defined(VK_KHR_video_encode_queue) */
#if defined(VK_KHR_synchronization2)
	const PFN_vkCmdSetEvent2KHR vkCmdSetEvent2KHR = nullptr;
	const PFN_vkCmdResetEvent2KHR vkCmdResetEvent2KHR = nullptr;
	const PFN_vkCmdWaitEvents2KHR vkCmdWaitEvents2KHR = nullptr;
	const PFN_vkCmdPipelineBarrier2KHR vkCmdPipelineBarrier2KHR = nullptr;
	const PFN_vkCmdWriteTimestamp2KHR vkCmdWriteTimestamp2KHR = nullptr;
	const PFN_vkQueueSubmit2KHR vkQueueSubmit2KHR = nullptr;
#endif /* defined(VK_KHR_synchronization2) */
#if defined(VK_KHR_synchronization2) && defined(VK_AMD_buffer_marker)
	const PFN_vkCmdWriteBufferMarker2AMD vkCmdWriteBufferMarker2AMD = nullptr;
#endif /* defined(VK_KHR_synchronization2) && defined(VK_AMD_buffer_marker) */
#if defined(VK_KHR_synchronization2) && defined(VK_NV_device_diagnostic_checkpoints)
	const PFN_vkGetQueueCheckpointData2NV vkGetQueueCheckpointData2NV = nullptr;
#endif /* defined(VK_KHR_synchronization2) && defined(VK_NV_device_diagnostic_checkpoints) */
#if defined(VK_NV_fragment_shading_rate_enums)
	const PFN_vkCmdSetFragmentShadingRateEnumNV vkCmdSetFragmentShadingRateEnumNV = nullptr;
#endif /* defined(VK_NV_fragment_shading_rate_enums) */
#if defined(VK_KHR_copy_commands2)
	const PFN_vkCmdCopyBuffer2KHR vkCmdCopyBuffer2KHR = nullptr;
	const PFN_vkCmdCopyImage2KHR vkCmdCopyImage2KHR = nullptr;
	const PFN_vkCmdCopyBufferToImage2KHR vkCmdCopyBufferToImage2KHR = nullptr;
	const PFN_vkCmdCopyImageToBuffer2KHR vkCmdCopyImageToBuffer2KHR = nullptr;
	const PFN_vkCmdBlitImage2KHR vkCmdBlitImage2KHR = nullptr;
	const PFN_vkCmdResolveImage2KHR vkCmdResolveImage2KHR = nullptr;
#endif /* defined(VK_KHR_copy_commands2) */
#if defined(VK_EXT_vertex_input_dynamic_state)
	const PFN_vkCmdSetVertexInputEXT vkCmdSetVertexInputEXT = nullptr;
#endif /* defined(VK_EXT_vertex_input_dynamic_state) */
#if defined(VK_FUCHSIA_external_memory)
	const PFN_vkGetMemoryZirconHandleFUCHSIA vkGetMemoryZirconHandleFUCHSIA = nullptr;
	const PFN_vkGetMemoryZirconHandlePropertiesFUCHSIA vkGetMemoryZirconHandlePropertiesFUCHSIA = nullptr;
#endif /* defined(VK_FUCHSIA_external_memory) */
#if defined(VK_FUCHSIA_external_semaphore)
	const PFN_vkImportSemaphoreZirconHandleFUCHSIA vkImportSemaphoreZirconHandleFUCHSIA = nullptr;
	const PFN_vkGetSemaphoreZirconHandleFUCHSIA vkGetSemaphoreZirconHandleFUCHSIA = nullptr;
#endif /* defined(VK_FUCHSIA_external_semaphore) */
#if defined(VK_FUCHSIA_buffer_collection)
	const PFN_vkCreateBufferCollectionFUCHSIA vkCreateBufferCollectionFUCHSIA = nullptr;
	const PFN_vkSetBufferCollectionImageConstraintsFUCHSIA vkSetBufferCollectionImageConstraintsFUCHSIA = nullptr;
	const PFN_vkSetBufferCollectionBufferConstraintsFUCHSIA vkSetBufferCollectionBufferConstraintsFUCHSIA = nullptr;
	const PFN_vkDestroyBufferCollectionFUCHSIA vkDestroyBufferCollectionFUCHSIA = nullptr;
	const PFN_vkGetBufferCollectionPropertiesFUCHSIA vkGetBufferCollectionPropertiesFUCHSIA = nullptr;
#endif /* defined(VK_FUCHSIA_buffer_collection) */
#if defined(VK_HUAWEI_subpass_shading)
	const PFN_vkGetDeviceSubpassShadingMaxWorkgroupSizeHUAWEI vkGetDeviceSubpassShadingMaxWorkgroupSizeHUAWEI = nullptr;
	const PFN_vkCmdSubpassShadingHUAWEI vkCmdSubpassShadingHUAWEI = nullptr;
#endif /* defined(VK_HUAWEI_subpass_shading) */
#if defined(VK_HUAWEI_invocation_mask)
	const PFN_vkCmdBindInvocationMaskHUAWEI vkCmdBindInvocationMaskHUAWEI = nullptr;
#endif /* defined(VK_HUAWEI_invocation_mask) */
#if defined(VK_NV_external_memory_rdma)
	const PFN_vkGetMemoryRemoteAddressNV vkGetMemoryRemoteAddressNV = nullptr;
#endif /* defined(VK_NV_external_memory_rdma) */
#if defined(VK_EXT_extended_dynamic_state2)
	const PFN_vkCmdSetPatchControlPointsEXT vkCmdSetPatchControlPointsEXT = nullptr;
	const PFN_vkCmdSetRasterizerDiscardEnableEXT vkCmdSetRasterizerDiscardEnableEXT = nullptr;
	const PFN_vkCmdSetDepthBiasEnableEXT vkCmdSetDepthBiasEnableEXT = nullptr;
	const PFN_vkCmdSetLogicOpEXT vkCmdSetLogicOpEXT = nullptr;
	const PFN_vkCmdSetPrimitiveRestartEnableEXT vkCmdSetPrimitiveRestartEnableEXT = nullptr;
#endif /* defined(VK_EXT_extended_dynamic_state2) */
#if defined(VK_EXT_color_write_enable)
	const PFN_vkCmdSetColorWriteEnableEXT vkCmdSetColorWriteEnableEXT = nullptr;
#endif /* defined(VK_EXT_color_write_enable) */
#if defined(VK_EXT_multi_draw)
	const PFN_vkCmdDrawMultiEXT vkCmdDrawMultiEXT = nullptr;
	const PFN_vkCmdDrawMultiIndexedEXT vkCmdDrawMultiIndexedEXT = nullptr;
#endif /* defined(VK_EXT_multi_draw) */
#if defined(VK_EXT_pageable_device_local_memory)
	const PFN_vkSetDeviceMemoryPriorityEXT vkSetDeviceMemoryPriorityEXT = nullptr;
#endif /* defined(VK_EXT_pageable_device_local_memory) */
#if defined(VK_KHR_maintenance4)
	const PFN_vkGetDeviceBufferMemoryRequirementsKHR vkGetDeviceBufferMemoryRequirementsKHR = nullptr;
	const PFN_vkGetDeviceImageMemoryRequirementsKHR vkGetDeviceImageMemoryRequirementsKHR = nullptr;
	const PFN_vkGetDeviceImageSparseMemoryRequirementsKHR vkGetDeviceImageSparseMemoryRequirementsKHR = nullptr;
#endif /* defined(VK_KHR_maintenance4) */
};

#if VK_HOOK_DEBUG
void setInstanceHookThreadContext(
		void (*preCall) (void *, const char *, PFN_vkVoidFunction),
		void (*postCall) (void *, const char *, PFN_vkVoidFunction),
		const InstanceTable *table, const InstanceTable *replace, void *ctx);

void setDeviceHookThreadContext(
		void (*preCall) (void *, const char *, PFN_vkVoidFunction),
		void (*postCall) (void *, const char *, PFN_vkVoidFunction),
		const DeviceTable *table, const DeviceTable *replace, void *ctx);
#endif

}

#endif // COMPONENTS_XENOLITH_VK_XLVKTABLE_H_
